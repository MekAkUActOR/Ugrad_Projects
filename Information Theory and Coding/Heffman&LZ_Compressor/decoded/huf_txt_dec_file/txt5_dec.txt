她喃喃地说，完全不知该怎麽回答才好。总之，对付她最有效的手段就是不予理会，就像不能跟猛兽对上眼那样的感觉。
　　在那之後我们稍微讨论了一下，说是讨论，大家也知道就只是她一个人喋喋不休，结果我们决定去跟车站连在一起的大型购物商场。那里有出名的百货零售中心，应该会有她想买的「自杀用的绳子」。没啦，事实上并没有那种东西。
　　不一会儿，我们就走到了购物商场，那里人又多了起来，但零售中心里卖绳子的地方一个人也没有。会在这种天气买绳子的人，一定不是业者就是牛仔，要不就是马上要死掉的女孩子吧。
　　远处传来儿童喧闹的声音。我在离她稍远的地方比较着钉子的大小，她叫住年轻的店员。
　　「不好意思，我要找自杀用的绳子，我不想留下痕迹，这样应该选哪一种比较无伤？」
　　我清楚地听见她脑袋秀斗的提问。我转过身，看见店员脸上困惑的表情，不由得笑出声来。一笑出来，我就发觉这是她故意讲的笑话，立刻後悔不已。分明要自杀却无伤，这是她的笑话。我跟店员都冷不防中了她的圈套，而我甚至还笑出声来。我把不同大小的钉子一根根插回不一样的位置泄愤，然後走向正在偷笑的她和不知所措的店员。
　　「对不起，她就快死了，所以脑筋不太清楚。」
　　不知道是我的话让店员豁然开朗还是大吃一惊，总之，他就走开去做自己的事了。
　　「真是的，本来要让店员介绍不同商品的，你不要来捣乱啊。难道你嫉妒我跟店员感情好？」
　　「那叫做感情好的话，就不会有人想把柳橙做成天妇罗了。」
　　「什麽意思？」
　　「这话完全没有意义，所以就不要追问了好吗？」
　　我本来是要惹毛她的，但她停顿了一下，就哇哈哈哈哈地笑得比之前还夸张。
　　不知怎地，她心情好得出奇，很快买了一条绳子，还买了上面有可爱猫咪图案的袋子来装。我们走出零售中心，她一面哼着歌，一面晃动装着绳子的袋子，吸引了众人误解的视线。
　　「『知道秘密的同学』，接下来要干嘛？」
　　「我只是跟着你而已，并没什麽特别的目的。」
　　「咦，这样啊？你没有想去的地方吗？」
　　「一定要说的话，就书店吧。」
　　「要买书？」
　　「不是，我喜欢逛书店，未必一定要买书。」
　　「哎，怎麽好像是瑞典的谚语啊。」
　　「什麽意思？」
　　「这话完全没有意义，所以就不要追问啦。嘻嘻——。」
　　她果然好像心情很好，我却只觉得不爽。我们俩带着截然不同的表情，一起走向购物中心里的大型书店。到了书店我便不管她，迳自走向文艺新书叵，她并没跟上来。我一面浏览文库本，一面享受难得的独处时光。
　　我看了好几本文库的封面，翻阅开头的部分，时间不知不觉就过了。虽然这种感觉爱书人都能理解，但并非所有人都爱书。因此，我看了一下手表，带着一点罪恶感在书店里找她，她正笑着翻阅时尚杂志。我觉得站着阅读还能面带微笑，真是太厉害了，要我就办不到。
　　她察觉到我走近，我还没出声，她就转过头来望着我。我直率地道歉。
　　「对不起，把你给忘了。」
　　「好差劲！但是没关系，我也一直在看书。『知道秘密的同学』对时装之类的有兴趣吗？」
　　「没有。只要是不引人注目的普通衣服就好。」
　　「我想也是。但我可有兴趣了。上了大学後，我要打扮得漂漂亮亮的。话虽这麽说，但我马上就要死啦！人还是内在比外在重要。」
　　「你表达的方式完全错误。」
　　我装着若无其事的样子环视四周，心想她的话可能会引人注意，但是周围似乎并没人在意一个口出狂言的高中女生。
　　我们都没在书店买东西。事实上，在那之後我也什麽都没买。离开书店後，她随性逛了饰品店和眼镜店，但是我们都没花钱就出来了。结果她只买了绳子跟袋子。
　　我们走得累了，在她建议下，到全国连锁的咖啡店休息。店里虽然人多，但我们运气不错找到了位子。我去买两人份的饮料，她坐着等。她要冰拿铁。我到柜台点了冰拿铁和自己的冰咖啡，放在托盘上端回桌位。她在等待的当口拿出了《共病文库》，在上面振笔疾书。
　　「啊，谢谢。多少钱？」
　　「没关系，烤肉我也没出钱。」
　　「那是我自己要出钱的。好吧，就让你请我喝咖啡。」
　　她愉快地把吸管插进杯子吸拿铁。老是一直描述她愉快地这样那样可能是多此一举，因为她无论何时，不管做什麽，都充满了积极正面的态度。
　　「嘻嘻，别人看我们像是一对吗？」
　　「就算看起来像，但事实上不是，所以无所谓。」
　　「哇，好冷淡啊！」
　　「只要想那麽看，所有性别不同的两人组都能看成一对。光看外表你也完全不像马上要死了的样子。重要的不是别人的评价，而是内在。你刚不也说了嘛。」
　　「不愧是『知道秘密的同学』。」
　　她一面笑一面吸着拿铁，空气的声音从杯子里跑出来。
　　「所以，『知道秘密的同学』有女朋友吗？」
　　「好了，休息够了吧。」
　　「你的咖啡一口也没喝不是嘛？」
    string=''                               #对各码字译码
    for i in num:
        string+=code_dict[i]

    str_int=int(string,2)
    str_hex=hex(str_int)
    str_hex=str_hex.lstrip('0x')
    code_byte=bytes.fromhex(str_hex)
    with open(res_file,'wb')as f:           #解码后的字符串二进制写回
        f.write(code_byte)
    print("decoded file bytes:",code_byte.__len__())

def bin_num(text):
    binary,l=file_to_bit(text)
    lenth=binary.__len__()
    num0=0
    num1=0
    for i in range(0,lenth):
        if (binary[i]=='0'):
            num0+=1
        else:
            num1+=1
    print("numbers of '0':",num0,"        ","numbers of '1':",num1)
    print("frequency of '0':",num0/lenth,"        ","frequency of '1':",num1/lenth)



if __name__=="__main__":

    print("please enter your operation",'\n',"1:huffman_encode",'\n',"2:huffman_decode",'\n',"3:lz_encode",'\n',"4:lz_decode")
    ope=input()

    if (ope=='1'):
        print("please input the encoding file path:")
        source_file=input()

        print("please input the target file path:")
        res_text=input()

        #start=time.clock()
        start = time.process_time()
        encode(source_file,res_text)
        #end=time.clock()
        end = time.process_time()
        print('finish encoding!')
        print('Running time: %s Seconds'%(end-start))

    if(ope=='2'):
        print("please input the decoding file path:")
        source_file=input()

        print("please input the target file path:")
        res_file=input()

        #start=time.clock()
        start = time.process_time()
        decode(source_file,res_file)
        #end=time.clock()
        end = time.process_time()
        print('finish decoding!')
        print('Running time: %s Seconds'%(end-start))

    if (ope=='3'):
        print("please input the encoding file path:")
        source_file=input()

        print("please input the target file path:")
        res_text=input()

        #start=time.clock()
        start = time.process_time()
        lz_encode(source_file,res_text)
        #end=time.clock()
        end = time.process_time()
        print('finish encoding!')
        print('Running time: %s Seconds'%(end-start))

    if (ope == '4'):
        print("please input the decoding file path:")
        source_file = input()

        print("please input the target file path:")
        res_file = input()

        #start = time.clock()
        start = time.process_time()
        lz_decode(source_file, res_file)
        #end = time.clock()
        end = time.process_time()
        print('finish decoding!')
        print('Running time: %s Seconds' % (end - start))
将文件作为信源，对文件进行压缩是通过信源编码实现的。由于信源符号之间存在分布不均匀的相关性，使得信源存在冗余度，信源编码的主要任务就是减少冗余，提高编码效率。对于计算机中存储的文件，其大多是按二进制形式存储的，即，它们已经对原文件信息进行了二进制编码，并把信息按二进制编码存储。但由于这些文件的自身特性，如考虑通用性或易操作性而采用定长编码或整字节编码，导致其并未完全按照信源符号概率分布进行编码，编码效率较低，进而使存储时有较大冗余。
也是。你有女朋友吗？」
　　「你要怎麽样把什麽话说清楚我并不真的想知道，不用说也没关系。」
　　感觉她好像有话要说，我就先下手为强。帐单并不在桌上，我站起来跟店员说要结帐，被告知直接去柜台付钱。她也笑着站起来说：「走吧——」
　　看来她不是会死抓着话头不放的人。这下子我发现了对自己有利的一点，也打算以後就用这招。
　　我们挺着吃撑的肚子离开烤肉店，回到楼上地面层。明亮的夏日阳光袭来，我不由得眯起眼睛。
　　「天气真好——，要在这种日子死吗？」
　　我听见她喃喃地说，完全不知该怎麽回答才好。总之，对付她最有效的手段就是不予理会，就像不能跟猛兽对上眼那样的感觉。
　　在那之後我们稍微讨论了一下，说是讨论，大家也知道就只是她一个人喋喋不休，结果我们决定去跟车站连在一起的大型购物商场。那里有出名的百货零售中心，应该会有她想买的「自杀用的绳子」。没啦，事实上并没有那种东西。
　　不一会儿，我们就走到了购物商场，那里人又多了起来，但零售中心里卖绳子的地方一个人也没有。会在这种天气买绳子的人，一定不是业者就是牛仔，要不就是马上要死掉的女孩子吧。
　　远处传来儿童喧闹的声音。我在离她稍远的地方比较着钉子的大小，她叫住年轻的店员。
　　「不好意思，我要找自杀用的绳子，我不想留下痕迹，这样应该选哪一种比较无伤？」
　　我清楚地听见她脑袋秀斗的提问。我转过身，看见店员脸上困惑的表情，不由得笑出声来。一笑出来，我就发觉这是她故意讲的笑话，立刻後悔不已。分明要自杀却无伤，这是她的笑话。我跟店员都冷不防中了她的圈套，而我甚至还笑出声来。我把不同大
小的钉子一根根插回不一样的位置泄愤，然後走向正在偷笑的她和不知所措的店员。
　　「对不起，她就快死了，所以脑筋不太清楚。」
　　不知道是我的话让店员豁然开朗还是大吃一惊，总之，他就走开去做自己的事了。
　　「真是的，本来要让店员介绍不同商品的，你不要来捣乱啊。难道你嫉妒我跟店员感情好？」
　　「那叫做感情好的话，就不会有人想把柳橙做成天妇罗了。」
　　「什麽意思？」
　　「这话完全没有意义，所以就不要追问了好吗？」
　　我本来是要惹毛她的，但她停顿了一下，就哇哈哈哈哈地笑得比之前还夸张。
　　不知怎地，她心情好得出奇，很快买了一条绳子，还买了上面有可爱猫咪图案的袋子来装。我们走出零售中心，她一面哼着歌，一面晃动装着绳子的袋子，吸引了众人误解的视线。
　　「『知道秘密的同学』，接下来要干嘛？」
   result[i]+=1
        else:
            result.update({i:1})
    return result                      #对二进制字符串以8位为单位分析出现频率，并将结果用字典存放

class node:                            #建立节点类
    def __init__(self):
        self.frequency=0
        self.name=None
        self.l=None
        self.r=None
        self.code=None
    def __lt__(self, other):           #利用富比较排序各字节出现的频率
        return self.frequency<other.frequency

def huffman(dict):                     #返回赫夫曼数的根节点
    node_ls=[]
    for i in dict:
        a = node()
        a.frequency=dict[i]
        a.name=i
        node_ls.append(a)
    while len(node_ls)>1:
        node_ls.sort(reverse=True)
        temp_1=node_ls.pop()
        temp_2=node_ls.pop()
        new=node()
        new.frequency=temp_1.frequency+temp_2.frequency
        new.l=temp_1
        new.r=temp_2
        node_ls.append(new)
    return new


def code_ls(node,result,code):              #运用递归函数构造赫夫曼树
    if node.name:
        result.update({node.name:code})
        return
    code+='0'
    code_ls(node.l,result,code)
    code = code[:-1]
    code+='1'
    code_ls(node.r,result,code)
    return result                           #用字典存放8位二进制数和相应的码字

def lz_encode_dic_make(binary_str):   # lz编码建立字典
    num = []  # 组号表
    dic = []  # 字典表
    last = []  # 码字表
    dic.append('')
    i = 0  # 用来判断读取完成没有
    j = 0  # 去掉一个后的组好
    str1 = ''
    str2 = ''
    pbar = tqdm(total=binary_str.__len__())  # 进度条
    while i < binary_str.__len__():
        pbar.update(1)
        str1 = str1 + binary_str[i]
        flag = str1 in dic
        if (flag == True and i < binary_str.__len__() - 1):
            str2 = str2 + binary_str[i]
            i = i + 1
            continue
        elif (flag == False):
            str1_copy = copy.deepcopy(str1)
            dic.append(str1_copy)
            j = dic.index(str2)
            j_copy = copy.deepcopy(j)
            num.append(j_copy)
            last.append(binary_str[i])
            str1 = ''
            str2 = ''
            i = i + 1
        else:
            str1_copy = copy.deepcopy(str1)
            dic.append(str1_copy)
            j = dic.index(str2)
            j_copy = copy.deepcopy(j)
            num.append(j_copy)
            last.append(binary_str[i])
            str1 = ''
            str2 = ''
            i = i + 1
    pbar.close()
    return num,dic,last
由于计算机寻址的最小单位是字节，所以任何文件都必须是整字节大小，我们最后的压缩文件也不例外。若不是整字节，计算机会自动在文件的末尾补0。为了之后能正确地译码，我们必须告知译码程序原文件的字节数以正确译码。因此在封装码表时，我们用最开头四个字节保存原文件的字节数，这样程序理论上可以对4GB的文件进行压缩和解压。在这之后按序遍历256个结点的结点数组，无效结点，即“结点”属性为“0”的结点只以字符“1”表示；而有效结点，即“结点”属性为“1”的结点以“0”+“码长”+“码字”这三段字符串的拼接来表示。在这里我们进行了一个合理的假设：“不存在码长为256的码字”，因为若出现码长为256的码字，这必将是一棵非常极端的Huffman树，其出现概率可忽略不计。这样设计，“码长”字符串就不可能以“1”开头或长度超过8，译码时若遇到首字符为“1”也就能识别出这是个无效结点，并跳过。这方面的详细说明将在2.2.1重构码树时详细介绍。这样设计使封装码表时不需要传递信源符号，而是使用码字出现的顺序代替信源符号的传递，减小了传递码表对压缩效果
The Kariba Dam on the Zambezi River is one of the larger dams in Africa. Its construction was controversial, and a 2015 report by the Institute of Risk Management of South Africa included a warning that the dam is in dire need of maintenance. A number of options are available to the Zambezi River Authority (ZRA) that might address the situation. Three options in particular are of interest to ZRA:
(Option 1) Repairing the existing Kariba Dam, (Option 2) Rebuilding the existing Kariba Dam, or
1
(Option 3) Removing the Kariba Dam and replacing it with a series of ten to twenty smaller dams along the Zambezi River.
There are two main requirements for this problem:
Requirement 1 ZRA management requires a brief assessment of the three options listed, with suﬀicient detail to provide an overview of potential costs and benefits associated with each option. This requirement should not exceed two pages in length, and must be provided in addition to your main report.
Requirement 2 Provide a detailed analysis of Option (3) - removing the Kariba Dam and replacing it with a series of ten to twenty smaller dams along the Zambezi river. This new system of dams should have the same overall water management capabilities as the existing Kariba Dam while providing the same or greater levels of protection and water management options for Lake Kariba that are in place with the existing dam. Your analysis must support a recommendation as to the number and placement of the new dams along the Zambezi River. In your report for Requirement 2, you should include a strategy for modulating the water flow through your new multiple dam system that provides a reasonable balance between safety and costs. In addition to addressing known or predicted normal water cycles, your strategy should provide guidance to the ZRA managers that explains and justifies the actions that should be taken to properly handle emergency water flow situations (i.e. flooding and/or prolonged low water conditions). Your strategy should provide specific guidance for extreme water flows ranging from maximum expected discharges to minimum expected discharges. Finally, your recommended strategy should include information addressing any restrictions regarding the locations and lengths of time that different areas of the Zambezi River should be exposed to the most detrimental effects of the extreme conditions.赞比西河(Zambezi River)是非洲第四长的河流，也是从非洲大陆流入印度洋的最长河流，当地 方言意为“巨大的河流”。
赞比西河是非洲南部的大河，源于赞比亚西北部，距刚果河的源头约 1 千米;河流上游有一部分 经过安哥拉，但大部分位于赞比亚境内海拔约 1000 米的巴罗茨高原，经过纳米比亚及博茨瓦纳的边境 后，到达长 130 多千米的巴托卡峡谷(Batoka Canyon)时形成了著名的维多利亚瀑布，然后沿赞比 亚与津巴布韦的边境线冲过卡里巴峡谷(Kariba Canyon)进入莫桑比克境内的平原，水流开始趋缓， 成为非洲东南部主要的航运河道，最后在欣代附近注入莫桑比克海峡。
赞比西河全长 2574 千米，流域面积 139 万平方千米(图1)，年均流量 1.6 万立方米/秒，干流河 道中共有 72 处瀑布，河流水力的总蕴藏量约 1.37 亿千瓦。
2.2 赞比亚河水系构成[2]
赞比西河是流贯非洲中南部及东南部的河流，源出中非高原，往东注入印度洋。赞比西河连同其 支流形成非洲第四大河流域，并灌溉本洲中南部的一大片土地。它从中非高原源头向东流约 3,540 公 里后注入印度洋。它与它的支流所灌溉的面积达 1,300,000 平方公里。尚比西一词在东加人的语言中为 伟大的河流的意思，这条河还包括其沿路的维多利亚瀑布——这个世界最伟大的自然奇迹之一，以及 卡里巴 (Kariba) 水坝和卡布拉巴萨 (Cabora Bassa) 水坝，它们都位列非洲最大的水力发电工程。该 河穿过或构成 6 个国家或地区的边界，安哥拉、赞比亚、纳米比亚、博茨瓦纳、津巴布韦和莫桑比克。 使用这条河变成是一系列国际协定的主题。
2.3 赞比西河自然资源[2]
赞比西河处於热带区之内。上游和中游在高原上，气温因高度而变化，相对说来是温和的，一般 在 18∼30°C 之间。冬季 (5∼7 月) 阴凉而干燥，气温平均为 20°C。雨季始於 11 月至翌年 4 月。降雨 多为雷阵雨，雨量有时每小时可达 150 毫米，倾盆大雨间隔中天空清澈明朗。
赞比西河流域处于热带草原气候带，河流有明显的洪水期和枯水期。赞比西河水流最大时通常是 在 3 或 4 月。到了 10 或 11 月，流量减少到其最高峰时的 10% 不到。年平均流量每秒可达 7000m3。 洪水期出现在 11-4 月的雨季，旱季则为枯水期。赞比西河流域的降水量从北向南递减(1560-650 毫 米)，因此两岸支流呈不对称发育，上游西南部雨量小而变率大，支流多为间歇性河流;而北部雨量较 多而变率小，北部支流河水流量较稳定。卡富埃河流域的降雨量从北至南由 500 毫米减至 750 毫米。 由于各河段雨季开始时间先后不同，洪水期出现的月份也不一致。上游洪峰一般出现在 2-3 月，中游 洪峰则推迟到 4-5 月。径流的季节变化较大，3-4 月流量最大，10-11 月流量最小，下游河段的最大流 量与最小流量相差 11∼14 倍之多 (图2)。
流域西部是辽阔的洪泛平原，分水岭不高，汛期河水可漫过分水岭与南部奥卡万戈河上游支流以 及北部刚果河—亡游支流汇成大片的沼泽地。上游流经高原地区，河流纵坡乎缓.河道多弯曲，水流 缓慢，沿河沼泽广布，仅部分河段穿过急流和瀑布。中游流经著名的槽谷地带，大部分河道切过砂岩 层，有些河道切过玄武岩层。形成峡谷段与洪泛平原相间的景观。中游河谷宽度变化较大，水流的缓 急依河道的宽窄而变化。在峡谷间的开阔地带建有大型的卡里巴水库和卡布拉巴萨水库。中游河段的 主要支流卡富埃河和卢安瓜河流经高原沼泽地带和断裂谷地，形成许多峡谷急滩。下游河段流经奠桑 比克平原，河谷展宽至 3-8 公里。在近诲处形成巨大的河口三角洲。

The Kariba Dam on the Zambezi River is one of the larger dams in Africa. Its construction was controversial, and a 2015 report by the Institute of Risk Management of South Africa included a warning that the dam is in dire need of maintenance. A number of options are available to the Zambezi River Authority (ZRA) that might address the situation. Three options in particular are of interest to ZRA:
的降水量从北向南递减(1560-650 毫 米)，因此两岸支流呈不对称发育，上游西南部雨量小而变率大，支流多为间歇性河流;而北部雨量较 多而变率小，北部支流河水流量较稳定。卡富埃河流域的降雨量从北至南由 500 毫米减至 750 毫米。 由于各河段雨季开始时间先后不同，洪水期出现的月份也不一致。上游洪峰一般出现在 2-3 月，中游 洪峰则推迟到 4-5 月。径流的季节变化较大，3-4 月流量最大，10-11 月流量最小，下游河段的最大流 量与最小流量相差 11∼14 倍之多 (图2)。
流域西部是辽阔的洪泛平原，分水岭不高，汛期河水可漫过分水岭与南部奥卡万戈河上游支流以 及北部刚果河—亡游支流汇成大片的沼泽地。上游流经高原地区，河流纵坡乎缓.河道多弯曲，水流 缓慢，沿河沼泽广布，仅部分河段穿过急流和瀑布。中游流经著名的槽谷地带，大部分河道切过砂岩 层，有些河道切过玄武岩层。形成峡谷段